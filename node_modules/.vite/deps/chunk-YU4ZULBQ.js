import {
  CalendarOrClockPicker,
  DatePickerToolbar,
  PickersActionBar,
  WrapperVariantContext,
  datePickerValueManager,
  useDatePickerDefaultizedProps,
  useDateValidation,
  usePickerState
} from "./chunk-AKYZB4ZZ.js";
import {
  DIALOG_WIDTH
} from "./chunk-GDV4MIEW.js";
import {
  _extends,
  _objectWithoutPropertiesLoose,
  composeClasses,
  generateUtilityClass,
  generateUtilityClasses,
  init_extends,
  init_objectWithoutPropertiesLoose,
  require_prop_types,
  styled_default,
  useThemeProps2 as useThemeProps
} from "./chunk-2DF7DZAV.js";
import {
  require_jsx_runtime
} from "./chunk-D2LIDDPY.js";
import {
  require_react
} from "./chunk-IGOAJGOA.js";
import {
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/@mui/x-date-pickers/internals/components/PickerStaticWrapper/PickerStaticWrapper.js
init_extends();
init_objectWithoutPropertiesLoose();
var React = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());

// node_modules/@mui/x-date-pickers/internals/components/PickerStaticWrapper/pickerStaticWrapperClasses.js
function getStaticWrapperUtilityClass(slot) {
  return generateUtilityClass("MuiPickerStaticWrapper", slot);
}
var pickerStaticWrapperClasses = generateUtilityClasses("MuiPickerStaticWrapper", ["root", "content"]);

// node_modules/@mui/x-date-pickers/internals/components/PickerStaticWrapper/PickerStaticWrapper.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
var _excluded = ["displayStaticWrapperAs", "onAccept", "onClear", "onCancel", "onDismiss", "onSetToday", "open", "children", "components", "componentsProps"];
var useUtilityClasses = (ownerState) => {
  const {
    classes
  } = ownerState;
  const slots = {
    root: ["root"],
    content: ["content"]
  };
  return composeClasses(slots, getStaticWrapperUtilityClass, classes);
};
var PickerStaticWrapperRoot = styled_default("div", {
  name: "MuiPickerStaticWrapper",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})({
  display: "flex",
  flexDirection: "column"
});
var PickerStaticWrapperContent = styled_default("div", {
  name: "MuiPickerStaticWrapper",
  slot: "Content",
  overridesResolver: (props, styles) => styles.content
})(({
  theme
}) => ({
  overflow: "hidden",
  minWidth: DIALOG_WIDTH,
  display: "flex",
  flexDirection: "column",
  backgroundColor: theme.palette.background.paper
}));
function PickerStaticWrapper(inProps) {
  var _components$ActionBar;
  const props = useThemeProps({
    props: inProps,
    name: "MuiPickerStaticWrapper"
  });
  const {
    displayStaticWrapperAs,
    onAccept,
    onClear,
    onCancel,
    onSetToday,
    children,
    components,
    componentsProps
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
  const classes = useUtilityClasses(props);
  const ActionBar = (_components$ActionBar = components == null ? void 0 : components.ActionBar) != null ? _components$ActionBar : PickersActionBar;
  return (0, import_jsx_runtime.jsx)(WrapperVariantContext.Provider, {
    value: displayStaticWrapperAs,
    children: (0, import_jsx_runtime2.jsxs)(PickerStaticWrapperRoot, _extends({
      className: classes.root
    }, other, {
      children: [(0, import_jsx_runtime.jsx)(PickerStaticWrapperContent, {
        className: classes.content,
        children
      }), (0, import_jsx_runtime.jsx)(ActionBar, _extends({
        onAccept,
        onClear,
        onCancel,
        onSetToday,
        actions: displayStaticWrapperAs === "desktop" ? [] : ["cancel", "accept"]
      }, componentsProps == null ? void 0 : componentsProps.actionBar))]
    }))
  });
}
true ? PickerStaticWrapper.propTypes = {
  children: import_prop_types.default.node,
  classes: import_prop_types.default.object,
  components: import_prop_types.default.object,
  componentsProps: import_prop_types.default.object,
  displayStaticWrapperAs: import_prop_types.default.oneOf(["desktop", "mobile"]).isRequired,
  onAccept: import_prop_types.default.func.isRequired,
  onCancel: import_prop_types.default.func.isRequired,
  onClear: import_prop_types.default.func.isRequired,
  onDismiss: import_prop_types.default.func.isRequired,
  onSetToday: import_prop_types.default.func.isRequired,
  open: import_prop_types.default.bool.isRequired
} : void 0;

// node_modules/@mui/x-date-pickers/StaticDatePicker/StaticDatePicker.js
init_extends();
init_objectWithoutPropertiesLoose();
var React2 = __toESM(require_react());
var import_prop_types2 = __toESM(require_prop_types());
var import_jsx_runtime3 = __toESM(require_jsx_runtime());
var _excluded2 = ["ToolbarComponent", "value", "onChange", "displayStaticWrapperAs", "components", "componentsProps"];
var StaticDatePicker = React2.forwardRef(function StaticDatePicker2(inProps, ref) {
  const props = useDatePickerDefaultizedProps(inProps, "MuiStaticDatePicker");
  const {
    ToolbarComponent = DatePickerToolbar,
    displayStaticWrapperAs = "mobile",
    components,
    componentsProps
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded2);
  const {
    pickerProps,
    inputProps,
    wrapperProps
  } = usePickerState(props, datePickerValueManager);
  const validationError = useDateValidation(props) !== null;
  const DateInputProps = _extends({}, inputProps, other, {
    ref,
    validationError,
    components
  });
  return (0, import_jsx_runtime3.jsx)(PickerStaticWrapper, _extends({
    displayStaticWrapperAs,
    components,
    componentsProps
  }, wrapperProps, {
    children: (0, import_jsx_runtime3.jsx)(CalendarOrClockPicker, _extends({}, pickerProps, {
      toolbarTitle: props.label || props.toolbarTitle,
      ToolbarComponent,
      DateInputProps,
      components,
      componentsProps
    }, other))
  }));
});
true ? StaticDatePicker.propTypes = {
  acceptRegex: import_prop_types2.default.instanceOf(RegExp),
  autoFocus: import_prop_types2.default.bool,
  className: import_prop_types2.default.string,
  closeOnSelect: import_prop_types2.default.bool,
  components: import_prop_types2.default.object,
  componentsProps: import_prop_types2.default.object,
  dayOfWeekFormatter: import_prop_types2.default.func,
  defaultCalendarMonth: import_prop_types2.default.any,
  disabled: import_prop_types2.default.bool,
  disableFuture: import_prop_types2.default.bool,
  disableHighlightToday: import_prop_types2.default.bool,
  disableMaskedInput: import_prop_types2.default.bool,
  disableOpenPicker: import_prop_types2.default.bool,
  disablePast: import_prop_types2.default.bool,
  displayStaticWrapperAs: import_prop_types2.default.oneOf(["desktop", "mobile"]),
  getOpenDialogAriaText: import_prop_types2.default.func,
  getViewSwitchingButtonText: import_prop_types2.default.func,
  ignoreInvalidInputs: import_prop_types2.default.bool,
  InputAdornmentProps: import_prop_types2.default.object,
  inputFormat: import_prop_types2.default.string,
  InputProps: import_prop_types2.default.object,
  inputRef: import_prop_types2.default.oneOfType([import_prop_types2.default.func, import_prop_types2.default.shape({
    current: import_prop_types2.default.object
  })]),
  label: import_prop_types2.default.node,
  leftArrowButtonText: import_prop_types2.default.string,
  loading: import_prop_types2.default.bool,
  mask: import_prop_types2.default.string,
  maxDate: import_prop_types2.default.any,
  minDate: import_prop_types2.default.any,
  onAccept: import_prop_types2.default.func,
  onChange: import_prop_types2.default.func.isRequired,
  onError: import_prop_types2.default.func,
  onMonthChange: import_prop_types2.default.func,
  onViewChange: import_prop_types2.default.func,
  onYearChange: import_prop_types2.default.func,
  OpenPickerButtonProps: import_prop_types2.default.object,
  openTo: import_prop_types2.default.oneOf(["day", "month", "year"]),
  orientation: import_prop_types2.default.oneOf(["landscape", "portrait"]),
  readOnly: import_prop_types2.default.bool,
  reduceAnimations: import_prop_types2.default.bool,
  renderDay: import_prop_types2.default.func,
  renderInput: import_prop_types2.default.func.isRequired,
  renderLoading: import_prop_types2.default.func,
  rifmFormatter: import_prop_types2.default.func,
  rightArrowButtonText: import_prop_types2.default.string,
  shouldDisableDate: import_prop_types2.default.func,
  shouldDisableMonth: import_prop_types2.default.func,
  shouldDisableYear: import_prop_types2.default.func,
  showDaysOutsideCurrentMonth: import_prop_types2.default.bool,
  showToolbar: import_prop_types2.default.bool,
  ToolbarComponent: import_prop_types2.default.elementType,
  toolbarFormat: import_prop_types2.default.string,
  toolbarPlaceholder: import_prop_types2.default.node,
  toolbarTitle: import_prop_types2.default.node,
  value: import_prop_types2.default.any,
  views: import_prop_types2.default.arrayOf(import_prop_types2.default.oneOf(["day", "month", "year"]).isRequired)
} : void 0;

export {
  PickerStaticWrapper,
  StaticDatePicker
};
//# sourceMappingURL=chunk-YU4ZULBQ.js.map
